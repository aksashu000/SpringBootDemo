"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.predefined = exports.useTypeComponents = exports.useTypeRegistryStore = exports.TypeRegistryProvider = exports.TypeRegistryStoreContext = exports.createTypeRegistryStore = void 0;
var jsx_runtime_1 = require("@emotion/react/jsx-runtime");
var material_1 = require("@mui/material");
var react_1 = require("react");
var zustand_1 = require("zustand");
var createEasyType_1 = require("../components/DataTypes/createEasyType");
var Function_1 = require("../components/DataTypes/Function");
var Object_1 = require("../components/DataTypes/Object");
var JsonViewerStore_1 = require("./JsonViewerStore");
var createTypeRegistryStore = function () {
    return (0, zustand_1.createStore)()(function (set) { return ({
        registry: [],
        registerTypes: function (setState) {
            set(function (state) { return ({
                registry: typeof setState === 'function'
                    ? setState(state.registry)
                    : setState
            }); });
        }
    }); });
};
exports.createTypeRegistryStore = createTypeRegistryStore;
// @ts-expect-error we intentionally want to pass undefined to the context
// See https://github.com/DefinitelyTyped/DefinitelyTyped/pull/24509#issuecomment-382213106
exports.TypeRegistryStoreContext = (0, react_1.createContext)(undefined);
exports.TypeRegistryProvider = exports.TypeRegistryStoreContext.Provider;
var useTypeRegistryStore = function (selector, equalityFn) {
    var store = (0, react_1.useContext)(exports.TypeRegistryStoreContext);
    return (0, zustand_1.useStore)(store, selector, equalityFn);
};
exports.useTypeRegistryStore = useTypeRegistryStore;
var objectType = {
    is: function (value) { return typeof value === 'object'; },
    Component: Object_1.ObjectType,
    PreComponent: Object_1.PreObjectType,
    PostComponent: Object_1.PostObjectType
};
function matchTypeComponents(value, path, registry) {
    var potential;
    for (var _i = 0, registry_1 = registry; _i < registry_1.length; _i++) {
        var T = registry_1[_i];
        if (T.is(value, path)) {
            potential = T;
            if (typeof value === 'object') {
                // early return for case like `null`
                return T;
            }
        }
    }
    if (potential === undefined) {
        if (typeof value === 'object') {
            return objectType;
        }
        throw new Error('this is not possible');
    }
    return potential;
}
function useTypeComponents(value, path) {
    var registry = (0, exports.useTypeRegistryStore)(function (store) { return store.registry; });
    return (0, react_1.useMemo)(function () { return matchTypeComponents(value, path, registry); }, [value, path, registry]);
}
exports.useTypeComponents = useTypeComponents;
function predefined() {
    var types = [];
    function registerType(dataType) {
        function compare(prevProps, nextProps) {
            var _a, _b;
            return (Object.is(prevProps.value, nextProps.value) &&
                prevProps.inspect && nextProps.inspect &&
                ((_a = prevProps.path) === null || _a === void 0 ? void 0 : _a.join('.')) === ((_b = nextProps.path) === null || _b === void 0 ? void 0 : _b.join('.')));
        }
        dataType.Component = (0, react_1.memo)(dataType.Component, compare);
        if (dataType.Editor) {
            dataType.Editor = (0, react_1.memo)(dataType.Editor, function compare(prevProps, nextProps) {
                return Object.is(prevProps.value, nextProps.value);
            });
        }
        if (dataType.PreComponent) {
            dataType.PreComponent = (0, react_1.memo)(dataType.PreComponent, compare);
        }
        if (dataType.PostComponent) {
            dataType.PostComponent = (0, react_1.memo)(dataType.PostComponent, compare);
        }
        types.push(dataType);
    }
    registerType(__assign({ is: function (value) { return typeof value === 'boolean'; } }, (0, createEasyType_1.createEasyType)('bool', function (_a) {
        var value = _a.value;
        return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: value ? 'true' : 'false' });
    }, {
        colorKey: 'base0E',
        fromString: function (value) { return Boolean(value); }
    })));
    var displayOptions = {
        weekday: 'short',
        year: 'numeric',
        month: 'short',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
    };
    registerType(__assign({ is: function (value) { return value instanceof Date; } }, (0, createEasyType_1.createEasyType)('date', function (_a) {
        var value = _a.value;
        return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: value.toLocaleTimeString('en-us', displayOptions) });
    }, {
        colorKey: 'base0D'
    })));
    registerType(__assign({ is: function (value) { return value === null; } }, (0, createEasyType_1.createEasyType)('null', function () {
        var backgroundColor = (0, JsonViewerStore_1.useJsonViewerStore)(function (store) { return store.colorspace.base02; });
        return ((0, jsx_runtime_1.jsx)(material_1.Box, __assign({ sx: {
                fontSize: '0.8rem',
                backgroundColor: backgroundColor,
                fontWeight: 'bold',
                borderRadius: '3px',
                padding: '0.5px 2px'
            } }, { children: "NULL" })));
    }, {
        colorKey: 'base08',
        displayTypeLabel: false
    })));
    registerType(__assign({ is: function (value) { return value === undefined; } }, (0, createEasyType_1.createEasyType)('undefined', function () {
        var backgroundColor = (0, JsonViewerStore_1.useJsonViewerStore)(function (store) { return store.colorspace.base02; });
        return ((0, jsx_runtime_1.jsx)(material_1.Box, __assign({ sx: {
                fontSize: '0.7rem',
                backgroundColor: backgroundColor,
                borderRadius: '3px',
                padding: '0.5px 2px'
            } }, { children: "undefined" })));
    }, {
        colorKey: 'base05',
        displayTypeLabel: false
    })));
    registerType(__assign({ is: function (value) { return typeof value === 'string'; } }, (0, createEasyType_1.createEasyType)('string', function (props) {
        var _a = (0, react_1.useState)(false), showRest = _a[0], setShowRest = _a[1];
        var collapseStringsAfterLength = (0, JsonViewerStore_1.useJsonViewerStore)(function (store) { return store.collapseStringsAfterLength; });
        var value = showRest
            ? props.value
            : props.value.slice(0, collapseStringsAfterLength);
        var hasRest = props.value.length > collapseStringsAfterLength;
        return ((0, jsx_runtime_1.jsxs)(material_1.Box, __assign({ component: 'span', sx: {
                overflowWrap: 'anywhere',
                cursor: hasRest ? 'pointer' : 'inherit'
            }, onClick: function () {
                if (hasRest) {
                    setShowRest(function (value) { return !value; });
                }
            } }, { children: ["\"", value, hasRest && !showRest && ((0, jsx_runtime_1.jsx)(material_1.Box, __assign({ component: 'span', sx: { padding: 0.5 } }, { children: "\u2026" }))), "\""] })));
    }, {
        colorKey: 'base09',
        fromString: function (value) { return value; }
    })));
    registerType({
        is: function (value) { return typeof value === 'function'; },
        Component: Function_1.FunctionType,
        PreComponent: Function_1.PreFunctionType,
        PostComponent: Function_1.PostFunctionType
    });
    var isInt = function (n) { return n % 1 === 0; };
    registerType(__assign({ is: function (value) { return typeof value === 'number' && isNaN(value); } }, (0, createEasyType_1.createEasyType)('NaN', function () {
        var backgroundColor = (0, JsonViewerStore_1.useJsonViewerStore)(function (store) { return store.colorspace.base02; });
        return ((0, jsx_runtime_1.jsx)(material_1.Box, __assign({ sx: {
                backgroundColor: backgroundColor,
                fontSize: '0.8rem',
                fontWeight: 'bold',
                borderRadius: '3px'
            } }, { children: "NaN" })));
    }, {
        colorKey: 'base08',
        displayTypeLabel: false
    })));
    registerType(__assign({ is: function (value) { return typeof value === 'number' &&
            !isInt(value); } }, (0, createEasyType_1.createEasyType)('float', function (_a) {
        var value = _a.value;
        return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: value });
    }, {
        colorKey: 'base0B',
        fromString: function (value) { return parseFloat(value); }
    })));
    registerType(__assign({ is: function (value) { return typeof value === 'number' && isInt(value); } }, (0, createEasyType_1.createEasyType)('int', function (_a) {
        var value = _a.value;
        return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: value });
    }, {
        colorKey: 'base0F',
        fromString: function (value) { return parseInt(value); }
    })));
    registerType(__assign({ is: function (value) { return typeof value === 'bigint'; } }, (0, createEasyType_1.createEasyType)('bigint', function (_a) {
        var value = _a.value;
        return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: "".concat(value, "n") });
    }, {
        colorKey: 'base0F',
        fromString: function (value) { return BigInt(value.replace(/\D/g, '')); }
    })));
    return types;
}
exports.predefined = predefined;

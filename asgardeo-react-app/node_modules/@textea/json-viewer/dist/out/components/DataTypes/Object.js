"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObjectType = exports.PostObjectType = exports.PreObjectType = void 0;
var jsx_runtime_1 = require("@emotion/react/jsx-runtime");
var material_1 = require("@mui/material");
var react_1 = require("react");
var useColor_1 = require("../../hooks/useColor");
var useIsCycleReference_1 = require("../../hooks/useIsCycleReference");
var JsonViewerStore_1 = require("../../stores/JsonViewerStore");
var utils_1 = require("../../utils");
var DataKeyPair_1 = require("../DataKeyPair");
var Icons_1 = require("../Icons");
var DataBox_1 = require("../mui/DataBox");
var objectLb = '{';
var arrayLb = '[';
var objectRb = '}';
var arrayRb = ']';
function inspectMetadata(value) {
    var length = (0, utils_1.getValueSize)(value);
    var name = '';
    if (value instanceof Map || value instanceof Set) {
        name = value[Symbol.toStringTag];
    }
    if (Object.prototype.hasOwnProperty.call(value, Symbol.toStringTag)) {
        name = value[Symbol.toStringTag];
    }
    return "".concat(length, " Items").concat(name ? " (".concat(name, ")") : '');
}
var PreObjectType = function (props) {
    var metadataColor = (0, JsonViewerStore_1.useJsonViewerStore)(function (store) { return store.colorspace.base04; });
    var textColor = (0, useColor_1.useTextColor)();
    var isArray = (0, react_1.useMemo)(function () { return Array.isArray(props.value); }, [props.value]);
    var isEmptyValue = (0, react_1.useMemo)(function () { return (0, utils_1.getValueSize)(props.value) === 0; }, [props.value]);
    var sizeOfValue = (0, react_1.useMemo)(function () { return inspectMetadata(props.value); }, [props.value]);
    var displayObjectSize = (0, JsonViewerStore_1.useJsonViewerStore)(function (store) { return store.displayObjectSize; });
    var isTrap = (0, useIsCycleReference_1.useIsCycleReference)(props.path, props.value);
    return ((0, jsx_runtime_1.jsxs)(material_1.Box, __assign({ component: 'span', className: 'data-object-start', sx: {
            letterSpacing: 0.5
        } }, { children: [isArray ? arrayLb : objectLb, displayObjectSize && props.inspect && !isEmptyValue && ((0, jsx_runtime_1.jsx)(material_1.Box, __assign({ component: 'span', sx: {
                    pl: 0.5,
                    fontStyle: 'italic',
                    color: metadataColor,
                    userSelect: 'none'
                } }, { children: sizeOfValue }))), isTrap && !props.inspect && ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(Icons_1.CircularArrowsIcon, { sx: {
                            fontSize: 12,
                            color: textColor,
                            mx: 0.5
                        } }), isTrap] }))] })));
};
exports.PreObjectType = PreObjectType;
var PostObjectType = function (props) {
    var metadataColor = (0, JsonViewerStore_1.useJsonViewerStore)(function (store) { return store.colorspace.base04; });
    var isArray = (0, react_1.useMemo)(function () { return Array.isArray(props.value); }, [props.value]);
    var displayObjectSize = (0, JsonViewerStore_1.useJsonViewerStore)(function (store) { return store.displayObjectSize; });
    var isEmptyValue = (0, react_1.useMemo)(function () { return (0, utils_1.getValueSize)(props.value) === 0; }, [props.value]);
    var sizeOfValue = (0, react_1.useMemo)(function () { return inspectMetadata(props.value); }, [props.value]);
    return ((0, jsx_runtime_1.jsxs)(material_1.Box, __assign({ component: 'span', className: 'data-object-end' }, { children: [isArray ? arrayRb : objectRb, displayObjectSize && (isEmptyValue || !props.inspect)
                ? ((0, jsx_runtime_1.jsx)(material_1.Box, __assign({ component: 'span', sx: {
                        pl: 0.5,
                        fontStyle: 'italic',
                        color: metadataColor,
                        userSelect: 'none'
                    } }, { children: sizeOfValue })))
                : null] })));
};
exports.PostObjectType = PostObjectType;
function getIterator(value) {
    return typeof (value === null || value === void 0 ? void 0 : value[Symbol.iterator]) === 'function';
}
var ObjectType = function (props) {
    var keyColor = (0, useColor_1.useTextColor)();
    var borderColor = (0, JsonViewerStore_1.useJsonViewerStore)(function (store) { return store.colorspace.base02; });
    var groupArraysAfterLength = (0, JsonViewerStore_1.useJsonViewerStore)(function (store) { return store.groupArraysAfterLength; });
    var isTrap = (0, useIsCycleReference_1.useIsCycleReference)(props.path, props.value);
    var _a = (0, react_1.useState)((0, JsonViewerStore_1.useJsonViewerStore)(function (store) { return store.maxDisplayLength; })), displayLength = _a[0], setDisplayLength = _a[1];
    var objectSortKeys = (0, JsonViewerStore_1.useJsonViewerStore)(function (store) { return store.objectSortKeys; });
    var elements = (0, react_1.useMemo)(function () {
        if (!props.inspect) {
            return null;
        }
        var value = props.value;
        var iterator = getIterator(value);
        // Array also has iterator, we skip it and treat it as an array as normal.
        if (iterator && !Array.isArray(value)) {
            var elements_1 = [];
            if (value instanceof Map) {
                value.forEach(function (value, k) {
                    // fixme: key might be a object, array, or any value for the `Map<any, any>`
                    var key = k.toString();
                    var path = __spreadArray(__spreadArray([], props.path, true), [key], false);
                    elements_1.push((0, jsx_runtime_1.jsx)(DataKeyPair_1.DataKeyPair, { path: path, value: value, prevValue: props.prevValue instanceof Map ? props.prevValue.get(k) : undefined, editable: false }, key));
                });
            }
            else {
                // iterate with iterator func
                var iterator_1 = value[Symbol.iterator]();
                var result = iterator_1.next();
                var count = 0;
                while (!result.done) {
                    elements_1.push((0, jsx_runtime_1.jsx)(DataKeyPair_1.DataKeyPair, { path: __spreadArray(__spreadArray([], props.path, true), ["iterator:".concat(count)], false), value: result.value, nestedIndex: count, editable: false }, count));
                    count++;
                    result = iterator_1.next();
                }
            }
            return elements_1;
        }
        if (Array.isArray(value)) {
            // unknown[]
            if (value.length <= groupArraysAfterLength) {
                var elements_2 = value.slice(0, displayLength).map(function (value, index) {
                    var path = __spreadArray(__spreadArray([], props.path, true), [index], false);
                    return ((0, jsx_runtime_1.jsx)(DataKeyPair_1.DataKeyPair, { path: path, value: value, prevValue: Array.isArray(props.prevValue) ? props.prevValue[index] : undefined }, index));
                });
                if (value.length > displayLength) {
                    var rest = value.length - displayLength;
                    elements_2.push((0, jsx_runtime_1.jsxs)(DataBox_1.DataBox, __assign({ sx: {
                            cursor: 'pointer',
                            lineHeight: 1.5,
                            color: keyColor,
                            letterSpacing: 0.5,
                            opacity: 0.8,
                            userSelect: 'none'
                        }, onClick: function () { return setDisplayLength(function (length) { return length * 2; }); } }, { children: ["hidden ", rest, " items\u2026"] }), 'last'));
                }
                return elements_2;
            }
            var elements_3 = (0, utils_1.segmentArray)(value, groupArraysAfterLength);
            var prevElements_1 = Array.isArray(props.prevValue) ? (0, utils_1.segmentArray)(props.prevValue, groupArraysAfterLength) : undefined;
            return elements_3.map(function (list, index) {
                var path = __spreadArray([], props.path, true);
                return ((0, jsx_runtime_1.jsx)(DataKeyPair_1.DataKeyPair, { path: path, value: list, nestedIndex: index, prevValue: prevElements_1 === null || prevElements_1 === void 0 ? void 0 : prevElements_1[index] }, index));
            });
        }
        // object
        var entries = Object.entries(value);
        if (objectSortKeys) {
            entries = objectSortKeys === true
                ? entries.sort(function (_a, _b) {
                    var a = _a[0];
                    var b = _b[0];
                    return a.localeCompare(b);
                })
                : entries.sort(function (_a, _b) {
                    var a = _a[0];
                    var b = _b[0];
                    return objectSortKeys(a, b);
                });
        }
        var elements = entries.slice(0, displayLength).map(function (_a) {
            var _b;
            var key = _a[0], value = _a[1];
            var path = __spreadArray(__spreadArray([], props.path, true), [key], false);
            return ((0, jsx_runtime_1.jsx)(DataKeyPair_1.DataKeyPair, { path: path, value: value, prevValue: (_b = props.prevValue) === null || _b === void 0 ? void 0 : _b[key] }, key));
        });
        if (entries.length > displayLength) {
            var rest = entries.length - displayLength;
            elements.push((0, jsx_runtime_1.jsxs)(DataBox_1.DataBox, __assign({ sx: {
                    cursor: 'pointer',
                    lineHeight: 1.5,
                    color: keyColor,
                    letterSpacing: 0.5,
                    opacity: 0.8,
                    userSelect: 'none'
                }, onClick: function () { return setDisplayLength(function (length) { return length * 2; }); } }, { children: ["hidden ", rest, " items\u2026"] }), 'last'));
        }
        return elements;
    }, [
        props.inspect,
        props.value,
        props.prevValue,
        props.path,
        groupArraysAfterLength,
        displayLength,
        keyColor,
        objectSortKeys
    ]);
    var marginLeft = props.inspect ? 0.6 : 0;
    var width = (0, JsonViewerStore_1.useJsonViewerStore)(function (store) { return store.indentWidth; });
    var indentWidth = props.inspect ? width - marginLeft : width;
    var isEmptyValue = (0, react_1.useMemo)(function () { return (0, utils_1.getValueSize)(props.value) === 0; }, [props.value]);
    if (isEmptyValue) {
        return null;
    }
    return ((0, jsx_runtime_1.jsx)(material_1.Box, __assign({ className: 'data-object', sx: {
            display: props.inspect ? 'block' : 'inline-block',
            pl: props.inspect ? indentWidth - 0.6 : 0,
            marginLeft: marginLeft,
            color: keyColor,
            borderLeft: props.inspect ? "1px solid ".concat(borderColor) : 'none'
        } }, { children: props.inspect
            ? elements
            : !isTrap && ((0, jsx_runtime_1.jsx)(material_1.Box, __assign({ component: 'span', className: 'data-object-body', onClick: function () { return props.setInspect(true); }, sx: {
                    '&:hover': { cursor: 'pointer' },
                    padding: 0.5,
                    userSelect: 'none'
                } }, { children: "\u2026" }))) })));
};
exports.ObjectType = ObjectType;
